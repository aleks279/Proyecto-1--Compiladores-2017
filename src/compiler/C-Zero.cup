package tree;


import java_cup.runtime.*;
import tree.*;

terminal            PLUS, MINUS, MUL, DIV, ASSIGN;
terminal            LPAREN, RPAREN;
terminal Integer    NUMBER;
terminal String     IDENT;

non terminal Tree expr;

precedence left PLUS, MINUS;
precedence left MUL, DIV;
precedence left ASSIGN;




expr          ::= expr:e1 PLUS expr:e2 
                    {: RESULT = new Plus(e1, e2); :}
                | expr:e1 MINUS expr:e2
                    {: RESULT = new Minus(e1, e2); :}
                | expr:e1 MUL expr:e2
                    {: RESULT = new Multiply(e1, e2); :}
                | expr:e1 DIV expr:e2
                    {: RESULT = new Divide(e1, e2); :}
                | LPAREN expr:e RPAREN
                    {: RESULT = e; :}
                | IDENT:s ASSIGN expr:e
                    {: RESULT = new Assignment(s, e); :}
                | IDENT:s
                    {: RESULT = new Identifier(s); :}
                | NUMBER:n
                    {: RESULT = new Literal(n); :}
                ;


cond        ::= expr:e1  GREATER expr:e2
                    {: RESULT new Greater(e1,e2); :}
              | expr:e1 LESS expr:e2
                    {: RESULT new Less(e1,e2); :}
              | expr:e1 EQUAL expr:e2
                    {: RESULT new Equal(e1,e2); :}
              | expr:e1  expr:e2
                    {: RESULT new (e1,e2); :}
              | expr:e1  expr:e2
                    {: RESULT new (e1,e2); :}
              | expr:e1  expr:e2
                    {: RESULT new (e1,e2); :}
              | expr:e1  expr:e2
                    {: RESULT new (e1,e2); :}